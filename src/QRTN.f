C
C     FORTICON8  JANUARY 2018
C     MATTHEW CLARK
C
      SUBROUTINE QRTN (A,B,V,EIG,N,M,TOL,NJX)
C
C  SUBROUTINE FOR PERFORMING A QR TRANSFORM ON A REAL SYMMETRIC
C  TRIDIAGONAL MATRIX.
C
C  N IS THE DIMENSION OF THE MATRIX. A CONTAINS THE N DIAGONAL
C  ELEMENTS OF THE TRIDIAGONAL MATRIX. B CONTAINS THE N-1 OFF-
C  DIAGONAL ELEMENTS. M IS THE MAXIMUM NUMBER OF ITERATIONS ( SAY
C  20 ). NJX IS THE PHYSICAL ROW DIMENSION OF THE EIGENVECTOR
C  MATRIX V.
C
C  THE EIGENVALUES ARE ASSUMED KNOWN AND PLACED IN THE FIRST N
C  ELEMENTS OF EIG.
C
C  N VECTORS V ( EACH OF LENGTH N ) ARE TRANSFORMED INTO THE
C  BASIS IN WHICH THE MATRIX IS DIAGONAL.
C
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION A(*),B(*),V(*),EIG(*)
      NX = N
      NNM1 = NJX*(NX-1)
      NI = 1
C
C  SET INITIAL TOTAL SHIFT.
C
      SH = 0
      IF (NX-2) 50,60,1
C
C  K COUNTS THE NUMBER OF ITERATIONS PER EIGENVALUE.
C
    1 K=0
C
C  SET INITIAL TEMPORARY SHIFT.
C
   98 ST = EIG(NX)-SH
C
C  CHECK FOR SMALL OFF-DIAGONAL ELEMENTS.
C
      IT = NX
   99 IT = IT-1
      IF (DABS(B(IT)).LE.TOL) GO TO 40
      IF (IT.GT.NI) GO TO 99
C
C  NO SMALL OFF-DIAGONAL ELEMENTS FOUND.  ITERATE.  EACH NEW
C  ITERATION BEGINS HERE.
C
  100 K = K + 1
      IF (K.LT.M) GO TO 11
      WRITE (6,1000) K
 1000 FORMAT(35H NO CONVERGENCE OF QR ALGORITHM IN   ,I4,11H ITERATIONS)
      CALL EXIT
   11 IF (K.EQ.1) GO TO 15
C
C  SOLVE THE TWO BY TWO IN THE LOWER RIGHT CORNER AND USE SMALLER ROOT
C  AS THE NEXT SHIFT.
C
      AT = A(NX) + A(NX-1)
      ST = AT*5.D-1
      DISC = AT**2-4.D0*(A(NX)*A(NX-1)-B(NX-1)**2)
      IF (DISC.LE.0.D0) GO TO 15
      ST = ST-DSIGN(DSQRT(DISC),ST)*5.D-1
C
C  INCREASE THE TOTAL SHIFT BY THE TEMPORARY SHIFT.
C
   15 SH = SH + ST
C
C  THIS LOOP SUBTRACTS THE TEMPORARY SHIFT FROM THE DIAGONAL ELEMENTS.
C
      DO 20 I=1,NX
   20 A(I) = A(I) - ST
      R = DSQRT(A(NI)**2+B(NI)**2)
      S = B(NI)/R
      CS = S
      C = A(NI)/R
      U = (S**2)*(A(NI)+A(NI+1))
      A(NI) = A(NI) + U
      CALL ROTATE(V(NI),C,S,NJX,NNM1)
      NTOP = NX - 2
C
C  THIS LOOP COMPLETES ONE ITERATION, THAT IS ONE QR TRANSFORM.
C
      DO 10 I=NI,NTOP
C
C  G IS THE GAMMA AND Q IS THE P IN THE NOTATION OF WILKINSON.
C
      G = A(I+1) - U
      Q = C*A(I+1) - CS*B(I)
      R = DSQRT(Q**2+B(I+1)**2)
C
C  ROTATE AN OFF-DIAGONAL ELEMENT.
C
      B(I) = S*R
C
C  FIND THE NEW SINE AND COSINE FOR THE JACOBI ROTATION. THEN
C  COMPUTE A NEW U.
C
      S = B(I+1)/R
      CS = C*S
      C = Q/R
      U = (S**2)*(G+A(I+2))
C
C  ROTATE A DIAGONAL ELEMENT.
C
      A(I+1) = G + U
C
C  ROTATE THE VECTORS.
C
      CALL ROTATE (V(I+1),C,S,NJX,NNM1)
   10 CONTINUE
C
C  COMPUTE THE LAST OFF DIAGONAL ELEMENT.
C
      B(NTOP+1) = S*(C*A(NX)-CS*B(NTOP+1))
C
C  COMPUTE THE LAST DIAGONAL ELEMENT.
C
      A(NX) = A(NX) - U
C
C  END OF ONE ITERATION.
C
      IT = NX
C
C  CHECK UPWARD THROUGH THE OFF DIAGONAL ELEMENTS TO FIND THOSE LESS
C  THAN TOL. IF NO OFF-DIAGONAL ELEMENTS LESS THAN TOL ARE FOUND,
C  PERFORM ANOTHER ITERATION.
C
   30 IT = IT - 1
      IF (DABS(B(IT)).LE.TOL) GO TO 40
      IF (IT-NI) 100,100,30
C
C  BRANCH ACCORDING TO WHETHER THE MATRIX ISOLATED BY THE SMALL
C  OFF-DIAGONAL ELEMENT IS OF DIMENSION ONE, TWO, OR MORE.
C
   40 IF (NX-IT-2) 50,60,70
C
C  EXTRACT THE EIGENVALUE OF A ONE BY ONE MATRIX BY ADDING BACK
C  THE SHIFT.
C
   50 A(NX) = A(NX) + SH
C
C  DECREASE THE SIZE OF THE PORTION OF THE MATRIX AFFECTED BY
C  LATER ITERATIONS.
C
      NX = NX - 1
C
C  RESET THE ITERATION COUNTER.
C
      K = 0
      GO TO 80
C
C  EXTRACT THE EIGENVALUES FROM A TWO BY TWO MATRIX AND PERFORM THE
C  CORRESPONDING ROTATIONS ON THE VECTORS.
C
   60 AL = -B(NX-1)
      AM = 5.D-1*(A(NX-1)-A(NX))
      AN = DSQRT(AL**2+AM**2)
      C = DSQRT((AN+DABS(AM))/(2.D0*AN))
      S = DSIGN(5.D-1,AM)*AL/(AN*C)
      TA = A(NX-1)
      TB = A(NX)
      TC = B(NX-1)
      CX = C**2
      SX = S**2
      CS = C*S
C
C  ROTATE THE DIAGONAL ELEMENTS, THE OFF-DIAGONAL ELEMENTS, AND
C  THE VECTORS.
C
      A(NX-1) = TA*CX+TB*SX-2.D0*TC*CS+SH
      A(NX) = TA*SX+TB*CX+2.D0*TC*CS+SH
      B(NX-1) = 2.D0*AM*CS+TC*(CX-SX)
      I = NX-1
      S = -S
      CALL ROTATE (V(I),C,S,NJX,NNM1)
C
C  RESET THE ITERATION COUNTER.
C
      K = 0
C
C  DECREASE THE SIZE OF THE PORTION OF THE MATRIX AFFECTED BY THE
C  LATER ITERATIONS.
C
      NX = NX-2
      GO TO 80
C
C  THE NEXT STATEMENT IS REACHED WHEN THE PORTION OF THE MATRIX
C  ISOLATED IS GREATER THAN TWO BY TWO.  IT CHANGES THE LOWER LIMIT
C  OF THE ITERATION SO THAT ONLY THIS PORTION WILL BE AFFECTED BY
C  SUBSEQUENT ROTATIONS UNTIL ALL ITS EIGENVALUES ARE FOUND.
C
   70 NI = IT + 1
C
C  TRANSFER TO BEGINNING OF ANOTHER ITERATION.
C
      GO TO 100
C
C  NEXT STATEMENT IS REACHED AFTER EITHER ONE OR TWO EIGENVALUES
C  HAVE JUST BEEN FOUND.  IT TRANSFERS IF ALL THE EIGENVALUES IN
C  THIS PORTION OF THE MATRIX HAVE BEEN FOUND.
C
   80 IF (NX.LT.NI) GO TO 90
C
C  BRANCH ACCORDING TO WHETHER ONE, TWO, OR MORE EIGENVALUES REMAIN
C  TO BE FOUND.
C
   95 IF (NX-NI-1) 50,60,98
C
C  THE NEXT STATEMENT IS REACHED WHEN ALL EIGENVALUES IN THIS PART
C  OF THE MATRIX HAVE BEEN FOUND. IT RETURNS IF THIS IS THE LAST
C  PART OF THE MATRIX.
C
   90 IF (NI.EQ.1) RETURN
C
C  ENLARGE THE PORTION OF THE MATRIX BEING TREATED TO INCLUDE THE
C  BEGINNING OF THE MATRIX.
C
      NI = 1
      GO TO 95
      END
