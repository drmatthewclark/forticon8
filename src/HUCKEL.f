C
C     FORTICON8  JANUARY 2018
C     MATTHEW CLARK
C
 
      SUBROUTINE HUCKEL(H,S,MAD,C,SP,PD,MAXS,MAXP,MAXD,COUL0,SORB,IOCC,
     1HDG,     NDIM, ND1 ,NC,NATOM,NTYPE,NHDG)
C
C  SUBROUTINE TO 1) DETERMINE ORBITAL OCCUPATION NUMBERS, AND 2) SETUP
C  HUCKEL MATRIX.
C
C	COUL0(NATOM)
C
      IMPLICIT REAL*8 (A-H,O-Z)

      INCLUDE 'PARAMETERS'
 
      DIMENSION H(NDIM,NDIM),S(NDIM,NDIM),MAD(NTYPE,NTYPE),C(NC),
     1SP(NDIM),PD(NDIM),MAXS(NDIM),MAXP(NDIM),MAXD(NDIM),
     2COUL0(NC),
     3SORB(NDIM),IOCC(NDIM),HDG(NHDG)
      REAL*8 MAD
      REAL*4 IOCC
      CHARACTER*4 MAXD
 
      INCLUDE 'ATOMCOMMON'

      COMMON/TITLE/AB(10)
      COMMON/CNTRL/CON,PEEP,COULH,NH,NA,NATM,KA,NELEC,METH,IPRINT,
     1IPUNCH,L1,L2,L3,L4,L5,ONEMAT,ITERAT
      LOGICAL*1 L1,L2,L3,L4,L5,ONEMAT,ITERAT
      COMMON/OUT/PRT(20),PUN(20)
      LOGICAL*1 PRT,PUN
      DIMENSION GSCRATCH(NDIM,6)
 
 
      COMMON/ITPARM/DAMP1,DAMP2,DAMP3,LAMPRI,DELTAC,SENSE,MAXCYC,PRTCYC,
     1ICYCLE,NCON,PARTIT,PRINTX,ITABLE(20)
      REAL*8 LAMPRI
      INTEGER*4 PRTCYC
      LOGICAL*1 PARTIT,PRINTX,ITABLE
      COMMON/STARS/STAR,STAR2
      INTEGER*2 STAR,STAR2
      CHARACTER*4 ONE,TWO,STAR1
      DATA ONE,TWO,STAR1/'1','2','*'/
 
      IF(ONEMAT.AND.IPRINT.LT.-2) RETURN
      ICYCLE=1
C
C  SETUP DEFAULT ORBITAL OCCUPATIONS.
C
      IF(L1) GO TO 3
      IH=NELEC/2
      JH=NDIM+1-IH
      DO 1 I=1,JH
1     IOCC(I)=0.0
      DO 2 I=JH,NDIM
2     IOCC(I)=2.0
      IF(IH+IH.NE.NELEC) IOCC(JH-1)=1.0
      GO TO 500
C
C  PROVISION FOR READING IN USER SPECIFIED OCCUPATIONS.
C  ALSO PROVISION FOR NON-INTEGER OCCUPATIONS.
C
3     READ(5,2000) (MAXD(I),I=1,NDIM)
2000  FORMAT(80A1)
      TEL=0.0D0
      DO 4 I=1,NDIM
      J=NDIM+1-I
      IOCC(J)=0.0
      IF(MAXD(I).EQ.ONE) IOCC(J)=1.0
      IF(MAXD(I).EQ.TWO) IOCC(J)=2.0
      IF(MAXD(I).EQ.STAR1) READ(5,900) IOCC(J)
900   FORMAT(F15.8)
4     TEL=TEL+DBLE(IOCC(J))
      TEL=DABS(TEL-DFLOAT(NELEC))
      IF(TEL.LT.0.001D0) GO TO 500
      WRITE(6,2001)
2001  FORMAT(/,'*** WARNING ****    ORBITAL POPULATIONS INCONSISTENT WIT
     1H ASSUMED CHARGE ON MOLECULE',////,T10,'I',T25,'IOCC(I)',/)
      DO 99 I=1,NDIM
99    WRITE(6,2002) I,IOCC(I)
2002  FORMAT(T8,I3,T22,F12.8)
      STOP
C
C  CALL GRMSCH TO ORTHOGONALISE BASIS SET.
C
500   CALL GRMSCH(S,C,NDIM)
      CON=.5D0*CON
      IF(.NOT.ITERAT) GO TO 15
      DO 5 I=1,NDIM
5     SORB(I)=0.D0
      DO 10 I=1,NATOM
      X(I)=0.D0
      Z(I)=0.D0
10    COUL0(I)=0.D0
15    IF(.NOT.ONEMAT) GO TO 25
C
C  IN ONE MATRIX CASE, STUFF DIAGONAL ELEMENTS OF S INTO SP.
C
      DO 20 I=1,NDIM
20    SP(I)=S(I,I)
C
C  SETUP DIAGONAL ELEMENTS OF HUCKEL MATRIX IN H(I,J).
C
25    IF(NH.EQ.0) GO TO 35
      ET=COULH
      DO 30 I=1,NH
      IF(ITERAT) ET=COULH-COUL0(I)
30    C(I)=ET
35    IH=NH+1
      ET=0.D0
 
 
      DO 50 I=1,NA
      KEYI=KEY(I)
      IF(ITERAT) ET=COUL0(I+NH)
      C(IH)=COULS(KEYI)-ET
      IH=IH+1
      IF(NP(KEYI).EQ.0) GO TO 50
      HH=COULP(KEYI)-ET
      JH=IH+2
      ASSIGN 40 TO IL
      GO TO 42
40    IF(ND(KEYI).EQ.0) GO TO 50
      HH=COULD(KEYI)-ET
      JH=IH+4
      ASSIGN 50 TO IL
42    DO 45 J=IH,JH
45    C(J)=HH
      IH=JH+1
      GO TO IL,(40,50)
50    CONTINUE
      DO 55 I=1,NDIM
55    H(I,I)=C(I)
      IF(NHDG.EQ.1) GO TO 59
      DO 56 I=1,NDIM
56    HDG(I)=C(I)
C
C  SETUP OFF-DIAGONAL ELEMENTS OF HUCKEL MATRIX.
C
59    CNST=CON
      DO 58 I=2,NDIM
      IL=I-1
      DO 58 J=1,IL
      HH=C(I)+C(J)
      IF(.NOT.L5) GO TO 58
      ET=(C(I)-C(J))/HH
      ET=ET*ET
      CNST=CON+ET/2.0D0+ET*ET*(0.5D0-CON)
58    H(I,J)=CNST*HH*S(I,J)
      IF(ONEMAT) GO TO 100
      DO 60 I=2,NDIM
      IL=I-1
      DO 60 J=1,IL
60    H(J,I)=H(I,J)
C
C  PRINT OUT HUCKEL MATRIX. PRINT OUT TITLE IF METH IS NOT
C  EQUAL TO ZERO.
C
806   IF(ICYCLE.GT.1) GO TO 800
      IF(PRT(6)) GO TO 805
      IF(METH.EQ.0) GO TO 801
      GO TO 802
800   IF(ICYCLE.GE.10000) WRITE(6,701) AB
701   FORMAT(//,'RESULTS OF CALCULATION  ',8A8,A6,A2,//)
      IF(PRT(7).OR..NOT.PRINTX) GO TO 805
801   WRITE(6,803)
803   FORMAT('HUCKEL MATRIX')
      CALL PEGLEG(H,NDIM,NDIM)
      GO TO 805
802   WRITE(6,804)
804   FORMAT('INPUT HUCKEL MATRIX')
      CALL PEGLEG(H,NDIM,NDIM)
805   IF(ICYCLE.EQ.1.AND.PUN(6)) WRITE(7,825) H
      IF(ICYCLE.GT.1.AND.PUN(7).AND.PRINTX) WRITE(7,825) H
825   FORMAT(8F9.5)
C
C  IF CALCULATING ENERGY MATRIX, STORE H(I,I) IN X(I),Y(I),Z(I).
C
      IF(ICYCLE.LE.MAXCYC.AND.METH.NE.0) GO TO 100
      IF(NH.EQ.0) GO TO 369
      DO 370 I=1,NH
370   X(I)=H(I,I)
369   IH=NH+1
      JH=NH+1
      DO 371 I=1,NA
      KEYI=KEY(I)
      X(IH)=H(JH,JH)
      JH=JH+1
      IF(NP(KEYI).EQ.0) GO TO 371
      Y(IH)=H(JH,JH)
      JH=JH+3
      IF(ND(KEYI).EQ.0) GO TO 371
      Z(IH)=H(JH,JH)
      JH=JH+5
371   IH=IH+1
C
C  CALL TRNFRM TO TRANSFORM HUCKEL MATRIX TO ORTHOGONAL BASIS SET.
C  THEN CALL GIVENS TO PERFORM DIAGONALIZATION.
C
100   IH=1
      IF(ONEMAT) IH=2
      CALL TRNFRM(S,H,C,COUL0,NDIM,SP,IH)
      IF(ONEMAT) GO TO 110
      IH=NDIM
      GO TO 120
110   IH=-NDIM
120   CALL GIVENS(NDIM,IH,NDIM,C,GSCRATCH,COUL0,H)
      IF(ICYCLE.GE.10000) ITERAT=.FALSE.
C
C  PRINT OUT TITLE, ENERGY LEVELS, AND OCCUPATION NUMBERS.
C
      IF(ITERAT) GO TO 700
      IF(METH.EQ.0) WRITE(6,701) AB
      IF(PRT(8)) GO TO 710
      WRITE(6,702) (I,COUL0(I),IOCC(I),I=1,NDIM)
702   FORMAT(//,57X,'ENERGY LEVELS (EV)',(/52X,'E(',I3,') =',F12.5,
     18X,F6.4))
710   IF(PUN(8)) WRITE(7,825) (COUL0(I),I=1,NDIM)
700   IF(ONEMAT) GO TO 200
C
C  DIDDLE WITH C,H.
C
      DO 160 J=1,NDIM
      DO 140 K=1,NDIM
140   C(K)=H(K,IH)
      DO 155 I=1,NDIM
      ET=0.D0
      DO 150 K=I,NDIM
150   ET=ET+S(I,K)*C(K)
155   H(I,IH)=ET
160   IH=IH-1
      K=1
      DO 180 I=2,NDIM
      IL=I-1
      DO 180 J=1,IL
      C(K)=S(I,J)
180   K=K+1
200   IF(METH.GT.1.AND.ITERAT) GO TO 210
C
C  CALL OUTPUT FOR FINAL PRINT OUT OF RESULTS.
C
205   CALL OUTPUT(H,S,MAD,C,COUL0,SORB,IOCC,HDG,NDIM,NTYPE,NC,NHDG)
      IF(.NOT.ITERAT) GO TO 999
      GO TO 220
C
C  IF DOING CHARGE ITERATIVE CALCULATION ( METH >1 ), CALL ITRATE
C  TO SETUP HUCKEL MATRIX.
C
210   CALL ITRATE(H,S,MAD,C,COUL0,SORB,IOCC,HDG,NDIM,NTYPE,NC,NHDG)
      IF(.NOT.ITERAT) GO TO 205
220   IF(ICYCLE.GT.MAXCYC) ICYCLE=10000
      IF(METH.GT.1) GO TO 806
      GO TO 15
  999 RETURN
      END
