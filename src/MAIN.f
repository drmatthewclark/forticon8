 
C FORTICON8 (VAX VERSION)  QCPE 517                                         
C
C  THE FOLLOWING CODE IS NOT THE ORIGINAL SOURCE CODE. THIS CODE 
C  INCLUDES MODIFICATIONS TO WRITE OUT PERTINENT INFORMATION TO A
C  TEMPORARY FILE (FOR013) TO BE USED IN MO PLOTTING ROUTINES.
C
C  ALL MODIFICATIONS ARE COMMENTED TO PROVIDE EASE IN IDENTIFYING
C  CHANGES.      JJN   8-7-90
C
C  MODIFIED BY MATTHEW CLARK 2018 TO WORK WITH LINUX GFORTRAN
c  COMPILER. SOME OF THE COMMONS ARE RESTRUCTURED AND SOME ARRAYS ADDED
C  SO THAT THEY ARE NOT REPURPOSED WITH DIFFERENT DATA TYPES
C
C  THE ORIGINAL GIVENS DIAGONOLIZATION WE REPLACED WITH A BETTER ONE
C  SINCE THE ORIGINAL HAD A LOT OF NUMERIC ISSUES THAT CAUSED IT
C  TO FAIL

C  MC 1-10-2018
C
C**********************************************************************
C                                                                     *
C    PROGRAM FORTICON8  COMPLETE FORTRAN VERSION OF ICON8             *
C                                                                     *
C    THE FOLLOWING SUBPROGRAMS, WHICH EXIST AS ASSEMBLER ROUTINES     *
C    IN ICON8, ARE TRANSLATED INTO FORTRAN0  MATRIX, ABFNS,           *
C    LOVLAP, GRMSCH, TRNFRM, DSUM, ROTATE, DOT, VECSUM, REDUCE,       *
C    FULCHM, AND REDCHM.  FORTICON INLUDES THESE AS WELL AS ALL       *
C    THE FORTRAN SUBPROGRAMS OF ICON8.                                *
C                                                                     *
C**********************************************************************
C
      IMPLICIT REAL*8(A-H,O-Z)
C
C     PROGRAM ICON FOR PERFORMING EXTENDED HUCKEL CALCULATIONS
C     WITH OR WITHOUT CHARGE ITERATION.
C     ** QCPE VERSION **
C
C     ** SAMPLE DECK **
C ....0....1....0....2....0....3....0....4....0....5....0....6....0
C
C ETHYLENE
C   4  2        2
C  0.92665        1.205          0.0
C -0.92665        1.205          0.0
C  0.92665       -1.205          0.0
C -0.92665       -1.205          0.0
C  0.0            0.67           0.0
C  0.0           -0.67           0.0
C  C C
C
C
C    REVISED TO ALLOW MORE FLEXIBILITY IN NUMBER OF ATOMS
C    POSSIBLE. MAXATM (MAXIMUM NUMBER OF ATOMS) SET AT 500.
C    MAXIMUM NUMBER OF HEAVY ATOMS SET AT 250. MAXIMUM NUMBER
C    OF USER-DEFINED ATOMS SET TO 230.
C    JJN   8-28-90
C
      INCLUDE 'PARAMETERS'

C
C   THE ABOVE PARAMETERS ARE DEFINED AS SUCH TO ELIMINATE THE NEED
C   TO SEARCH THROUGH THE CODE FOR EVERY OCCURRENCE OF THE NUMBERS
C   (AS I HAD TO DO WITH THE ORIGINAL CODE). THE PARAMETER STATEMENTS
C   ARE DEFINED IN EACH SUBROUTINE REQUIRING THEM SO IF THESE NEED TO
C   BE CHANGED AGAIN, JUST FIND THE PARAMETER STATEMENTS. ALSO, THERE
C   ARE A FEW PLACES WHERE THE USE OF THE PARAMETERS IS NOT ALLOWED AND
C   THE ACTUAL NUMBER IS USED. MOST NOTABLY IN DATA STATEMENTS. A QUICK
C   SEARCH THROUGH FOR THE VALUES OF MXUSER AND MXUSR2 WILL BE
C   NECESSARY.       JJN  9-8-90
C
      COMMON/CNTRL/CON,PEEP,COULH,NH,NA,NATM,KA,NELEC,METH,
     .IPRINT,IPUNCH,L1,L2,L3,L4,L5,ONEMAT,ITERAT
      LOGICAL*1 L1,L2,L3,L4,L5,ONEMAT,ITERAT
      COMMON/OUT/PRT(20),PUN(20),IOVPOP(24),IENRGY(24)
      LOGICAL*1 PRT,PUN
      INTEGER*2 IOVPOP,IENRGY
 
      INCLUDE 'ATOMCOMMON'

      COMMON/ITPARM/DAMP1,DAMP2,DAMP3,LAMPRI,DELTAC,SENSE,MAXCYC,
     .PRTCYC,ICYCLE,NCON,PARTIT,PRINTX,ITABLE(20)
      REAL*8 LAMPRI
      INTEGER*4 PRTCYC
      LOGICAL*1 PARTIT,PRINTX,ITABLE
      COMMON/ABC/AS2(5),BS2(5),CS2(5),AP2(5),BP2(5),CP2(5),AD2(5),
     .BD2(5),CD2(5),AS3(5),BS3(5),CS3(5),AP3(5),BP3(5),CP3(5),
     .AD3(5),BD3(5),CD3(5)
      COMMON/STARS/STAR,STAR2
      CHARACTER*2 STAR,STAR2

      REAL*8 STARTTIME, ENDTIME
      CHARACTER*30 DATE
      INTEGER*8 TIME

C     THIS MAY BE COMPILER SPECIFIC

      TIME=TIME8()
      CALL CTIME(TIME, DATE)
C
C     PRINTE BANNER
C
C
C...0....1....0....2....0....3....0....4....0....5....0....6....0....7....8
      WRITE(6,*)
     .'*****************************************************************
     .**********'
      WRITE(6,*)
     .'*                              FORTICON8                           
     .         *'
      WRITE(6,*)
     .'*QCPE Program No 344, QCPE, Indiana University, Bloomington, Ind.
     ., U.S.A  *' 
      WRITE(6,*)
     .'*    J. Howell, A. Rossi, D. Wallace, K. Haraki, and R. Hoffmann
     .         *'
C...0....1....0....2....0....3....0....4....0....5....0....6....0....7....8
      WRITE(6,*)
     .'*                                1977                              
     .         *'
      WRITE(6,*)
     .'*****************************************************************
     .**********'
      WRITE(6,*) DATE 
      WRITE(6,*) ''

      CALL CPU_TIME(STARTTIME)
C
C     CALL INPUT TO READ IN AND PRINT OUT INPUT DATA.
C
1000  CALL INPUT(NATOM,NDIM,NTYPE)
C
C     NOW NDIM IS NUMBER OF ATOMIC ORBITALS
C
      IF(IPRINT.LT.-3) GO TO 2000
C
C     CALCULATE MATRIX DIMENSIONS.
C
      NC=NDIM*(NDIM+1)/2
      NHS=NC+NC-NDIM
      NSS=NHS
C
C     IF NO WAVEFUNCTIONS NEEDED, SET NHS=0. THIS HAS THE EFFECT
C     OF EQUIVALENCING THE H AND S MATRICES.
C
      ONEMAT=.FALSE.
      IF(.NOT.ITERAT.AND.IPRINT.LT.-1) ONEMAT=.TRUE.
      IF(IPUNCH.NE.0) GO TO 600
      DO 400 I=6,20
      IF(PUN(I)) GO TO 600
400   CONTINUE
      GO TO 500
600   ONEMAT=.FALSE.
500   IF(ONEMAT) NHS=0
      IF(METH.LT.3) NTYPE=1
      NMD=NTYPE*NTYPE
      NCL=NDIM
      IF(NDIM.LT.10) NCL=10
      NOCC=(NDIM+1)/2
      NHDG=1
      IF(METH.GT.2.AND.L5) NHDG=NDIM
C
C     CALL MATRIX TO ALLOCATE SPACE FOR MATRICES.
C     ORDER OF MATRICES0 H S MAD C SP PD MAXS MAXP MAXD
C                        COUL0 SORB IOCC HDG
C
      CALL MATRIX(13,NHS,NSS,NMD,NC,NDIM,NDIM,NDIM,NDIM,2*NDIM,
     .NCL,NDIM,NOCC,NHDG,NDIM,NDIM,NC,NATOM,NTYPE,NHDG,NC,NC,
     .NC,NC,NC,NC,NDIM)
      CALL CPU_TIME(ENDTIME)

      WRITE(6,1900) 'CPU TIME ', ENDTIME-STARTTIME, ' SECONDS'
1900  FORMAT(//A, F9.4, A)
2000  CONTINUE
      GO TO 1000
      END
